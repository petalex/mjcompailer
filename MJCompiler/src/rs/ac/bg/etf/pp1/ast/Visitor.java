// generated with ast extension for cup
// version 0.8
// 22/5/2019 0:9:7


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(NewInitArrExprEnd NewInitArrExprEnd);
    public void visit(IfStmtEnd IfStmtEnd);
    public void visit(IfCond IfCond);
    public void visit(ClassMethModifier ClassMethModifier);
    public void visit(ExtndsImplmnts ExtndsImplmnts);
    public void visit(VarType VarType);
    public void visit(ActualParamExprList ActualParamExprList);
    public void visit(ClssName ClssName);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(IntrfaceName IntrfaceName);
    public void visit(MethodDecl MethodDecl);
    public void visit(ForDesignatorStmt ForDesignatorStmt);
    public void visit(MethType MethType);
    public void visit(ExtendsImplements ExtendsImplements);
    public void visit(FieldDeclList FieldDeclList);
    public void visit(FieldDeclEnd FieldDeclEnd);
    public void visit(FldType FldType);
    public void visit(DeclList DeclList);
    public void visit(EnumDecl EnumDecl);
    public void visit(LastFormParam LastFormParam);
    public void visit(MethName MethName);
    public void visit(ClassMethodDecl ClassMethodDecl);
    public void visit(ForCond ForCond);
    public void visit(AssignDesignatorStmt AssignDesignatorStmt);
    public void visit(EnumIdentList EnumIdentList);
    public void visit(InterfaceMethType InterfaceMethType);
    public void visit(FieldIdentList FieldIdentList);
    public void visit(VarDecl VarDecl);
    public void visit(InitList InitList);
    public void visit(ClassMethodDeclList ClassMethodDeclList);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(Modifier Modifier);
    public void visit(ConstType ConstType);
    public void visit(RelOp RelOp);
    public void visit(InterfaceMethName InterfaceMethName);
    public void visit(ForDeclEnd ForDeclEnd);
    public void visit(TypeList TypeList);
    public void visit(LastVarIdent LastVarIdent);
    public void visit(Condition Condition);
    public void visit(ExtndsImplmntsEnd ExtndsImplmntsEnd);
    public void visit(FormParamList FormParamList);
    public void visit(ElseStmtEnd ElseStmtEnd);
    public void visit(StatementList StatementList);
    public void visit(ConstIdent ConstIdent);
    public void visit(ConstDecl ConstDecl);
    public void visit(ActualParams ActualParams);
    public void visit(Implements Implements);
    public void visit(ClassMethType ClassMethType);
    public void visit(ProgName ProgName);
    public void visit(ClassMethodDeclBlock ClassMethodDeclBlock);
    public void visit(Type Type);
    public void visit(FormParams FormParams);
    public void visit(ConstIdentList ConstIdentList);
    public void visit(VarIdentList VarIdentList);
    public void visit(MulOp MulOp);
    public void visit(ClassMethName ClassMethName);
    public void visit(CondTerm CondTerm);
    public void visit(FieldDecl FieldDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(Expression Expression);
    public void visit(AddOp AddOp);
    public void visit(VarIdent VarIdent);
    public void visit(AssignOp AssignOp);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(Extends Extends);
    public void visit(FormParam FormParam);
    public void visit(LastForAssignDesignatorStmt LastForAssignDesignatorStmt);
    public void visit(LastForDesignatorStmt LastForDesignatorStmt);
    public void visit(FieldIdent FieldIdent);
    public void visit(Designator Designator);
    public void visit(InterfaceMethodDecl InterfaceMethodDecl);
    public void visit(FldModifier FldModifier);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(ClassMethDeclEnd ClassMethDeclEnd);
    public void visit(InterfaceMethodDeclList InterfaceMethodDeclList);
    public void visit(LastFieldIdent LastFieldIdent);
    public void visit(InitExprList InitExprList);
    public void visit(Term Term);
    public void visit(EnumIdent EnumIdent);
    public void visit(Decl Decl);
    public void visit(MethDeclEnd MethDeclEnd);
    public void visit(EnumName EnumName);
    public void visit(Modulus Modulus);
    public void visit(Division Division);
    public void visit(Multiplication Multiplication);
    public void visit(Subtraction Subtraction);
    public void visit(Addition Addition);
    public void visit(LessThanEqual LessThanEqual);
    public void visit(LessThan LessThan);
    public void visit(GreaterThanEqual GreaterThanEqual);
    public void visit(GreaterThan GreaterThan);
    public void visit(NotEqual NotEqual);
    public void visit(Equal Equal);
    public void visit(Assign Assign);
    public void visit(SimpleDesignator SimpleDesignator);
    public void visit(ArrayDesignator ArrayDesignator);
    public void visit(FieldDesignator FieldDesignator);
    public void visit(FirstInitializationExpression FirstInitializationExpression);
    public void visit(InitializationExpressions InitializationExpressions);
    public void visit(EmptyInitializationList EmptyInitializationList);
    public void visit(InitializationList InitializationList);
    public void visit(NewInitializedArrayExpressionEnd NewInitializedArrayExpressionEnd);
    public void visit(ExpressionFactor ExpressionFactor);
    public void visit(NewFactor NewFactor);
    public void visit(NewInitializedArrayFactor NewInitializedArrayFactor);
    public void visit(NewArrayFactor NewArrayFactor);
    public void visit(BoolFactor BoolFactor);
    public void visit(CharFactor CharFactor);
    public void visit(NumFactor NumFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(FunctionFactor FunctionFactor);
    public void visit(FirstFactor FirstFactor);
    public void visit(Factors Factors);
    public void visit(FirstTerm FirstTerm);
    public void visit(NegFirstTerm NegFirstTerm);
    public void visit(Terms Terms);
    public void visit(NoForCondition NoForCondition);
    public void visit(ForCondition ForCondition);
    public void visit(IfConditionError IfConditionError);
    public void visit(IfCondition IfCondition);
    public void visit(SimpleConditionExpression SimpleConditionExpression);
    public void visit(ConditionExpressions ConditionExpressions);
    public void visit(FirstConditionFact FirstConditionFact);
    public void visit(ConditionFacts ConditionFacts);
    public void visit(FirstConditionTerm FirstConditionTerm);
    public void visit(ConditionTerms ConditionTerms);
    public void visit(FirstActualParameterExpression FirstActualParameterExpression);
    public void visit(ActualParameterExpressions ActualParameterExpressions);
    public void visit(NoActualParameters NoActualParameters);
    public void visit(ActualParameters ActualParameters);
    public void visit(ForDeclarationEnd ForDeclarationEnd);
    public void visit(LastForAssignError LastForAssignError);
    public void visit(LastForAssignDesignatorStatement LastForAssignDesignatorStatement);
    public void visit(NoLastForDesignatorStatement NoLastForDesignatorStatement);
    public void visit(LastForDecDesignatorStatement LastForDecDesignatorStatement);
    public void visit(LastForIncDesignatorStatement LastForIncDesignatorStatement);
    public void visit(LastForFunctionDesignatorStatement LastForFunctionDesignatorStatement);
    public void visit(LastForAssignDesignatorStatementWrapper LastForAssignDesignatorStatementWrapper);
    public void visit(NoForDesignatorStatement NoForDesignatorStatement);
    public void visit(ForDesignatorStatement ForDesignatorStatement);
    public void visit(AssignError AssignError);
    public void visit(AssignDesignatorStatement AssignDesignatorStatement);
    public void visit(DecDesignatorStatement DecDesignatorStatement);
    public void visit(IncDesignatorStatement IncDesignatorStatement);
    public void visit(FunctionDesignatorStatement FunctionDesignatorStatement);
    public void visit(AssignDesignatorStatementWrapper AssignDesignatorStatementWrapper);
    public void visit(ElseStatementEnd ElseStatementEnd);
    public void visit(IfStatementEnd IfStatementEnd);
    public void visit(BlockStatement BlockStatement);
    public void visit(NumConstPrintStatement NumConstPrintStatement);
    public void visit(SimplePrintStatement SimplePrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(VoidReturnStatement VoidReturnStatement);
    public void visit(TypeReturnStatement TypeReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(ForStatement ForStatement);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(IfStatement IfStatement);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(TypeName TypeName);
    public void visit(FormalParameterSemicolonError FormalParameterSemicolonError);
    public void visit(LastSingleFormalParameter LastSingleFormalParameter);
    public void visit(LastArrayFormalParameter LastArrayFormalParameter);
    public void visit(FormalParameterCommaError FormalParameterCommaError);
    public void visit(FormalParameter FormalParameter);
    public void visit(ArrayFormalParameter ArrayFormalParameter);
    public void visit(LastFormalParameter LastFormalParameter);
    public void visit(FormalParameters FormalParameters);
    public void visit(NoMethodFormalParameters NoMethodFormalParameters);
    public void visit(MethodFormalParameters MethodFormalParameters);
    public void visit(ClassMethodDeclarationEnd ClassMethodDeclarationEnd);
    public void visit(ClassMethodName ClassMethodName);
    public void visit(NoClassMethodType NoClassMethodType);
    public void visit(ClassMethodType ClassMethodType);
    public void visit(ClassMethodModifier ClassMethodModifier);
    public void visit(ClassMethodDeclaration ClassMethodDeclaration);
    public void visit(MethodDeclarationEnd MethodDeclarationEnd);
    public void visit(MethodName MethodName);
    public void visit(NoMethodType NoMethodType);
    public void visit(MethodType MethodType);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoClassMethodDeclarations NoClassMethodDeclarations);
    public void visit(ClassMethodDeclarations ClassMethodDeclarations);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(InterfaceMethodName InterfaceMethodName);
    public void visit(NoInterfaceMethodType NoInterfaceMethodType);
    public void visit(InterfaceMethodType InterfaceMethodType);
    public void visit(InterfaceMethodDeclaration InterfaceMethodDeclaration);
    public void visit(NoInterfaceMethodDeclarations NoInterfaceMethodDeclarations);
    public void visit(InterfaceMethodDeclarations InterfaceMethodDeclarations);
    public void visit(InterfaceName InterfaceName);
    public void visit(InterfaceDeclDefinition InterfaceDeclDefinition);
    public void visit(NoClassMethodDeclarationsBlock NoClassMethodDeclarationsBlock);
    public void visit(ClassMethodDeclarationsBlock ClassMethodDeclarationsBlock);
    public void visit(NoFieldDeclarations NoFieldDeclarations);
    public void visit(FieldDeclarations FieldDeclarations);
    public void visit(NoVarDeclarations NoVarDeclarations);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(FirstType FirstType);
    public void visit(Types Types);
    public void visit(ImplementsInterfaces ImplementsInterfaces);
    public void visit(ExtendsClassError ExtendsClassError);
    public void visit(ExtendsClass ExtendsClass);
    public void visit(ExtendsAndImplementsError ExtendsAndImplementsError);
    public void visit(ExtendsAndImplements ExtendsAndImplements);
    public void visit(NoExtendsAndImplements NoExtendsAndImplements);
    public void visit(ImplementsInterfacesWrapper ImplementsInterfacesWrapper);
    public void visit(ExtendsClassWrapper ExtendsClassWrapper);
    public void visit(ExtendsAndImplementsWrapper ExtendsAndImplementsWrapper);
    public void visit(ClassFieldDeclarationEnd ClassFieldDeclarationEnd);
    public void visit(ExtendsAndImplementsEnd ExtendsAndImplementsEnd);
    public void visit(ClassName ClassName);
    public void visit(ClassDeclDefinition ClassDeclDefinition);
    public void visit(GlobalVarSemicolonError GlobalVarSemicolonError);
    public void visit(LastSingleVarIdentifier LastSingleVarIdentifier);
    public void visit(LastArrayVarIdentifier LastArrayVarIdentifier);
    public void visit(GlobalVarCommaError GlobalVarCommaError);
    public void visit(VarIdentifier VarIdentifier);
    public void visit(ArrayVarIdentifier ArrayVarIdentifier);
    public void visit(LastVarIdentifier LastVarIdentifier);
    public void visit(VarIdentifiers VarIdentifiers);
    public void visit(FieldSemicolonError FieldSemicolonError);
    public void visit(LastSingleFieldIdentifier LastSingleFieldIdentifier);
    public void visit(LastArrayFieldIdentifier LastArrayFieldIdentifier);
    public void visit(FieldCommaError FieldCommaError);
    public void visit(FieldIdentifier FieldIdentifier);
    public void visit(ArrayFieldIdentifier ArrayFieldIdentifier);
    public void visit(LastFieldIdentifer LastFieldIdentifer);
    public void visit(FieldIdentifiers FieldIdentifiers);
    public void visit(FieldType FieldType);
    public void visit(FieldModifer FieldModifer);
    public void visit(FieldDeclDefinition FieldDeclDefinition);
    public void visit(PrivateModifier PrivateModifier);
    public void visit(ProtectedModifier ProtectedModifier);
    public void visit(PublicModifier PublicModifier);
    public void visit(VariableType VariableType);
    public void visit(VarDeclDefinition VarDeclDefinition);
    public void visit(EnumIdentifier EnumIdentifier);
    public void visit(NumEnumIdentifier NumEnumIdentifier);
    public void visit(FirstEnumIdentifier FirstEnumIdentifier);
    public void visit(EnumIdentifiers EnumIdentifiers);
    public void visit(EnumerationName EnumerationName);
    public void visit(EnumDeclDefinition EnumDeclDefinition);
    public void visit(BoolConstIdentifier BoolConstIdentifier);
    public void visit(CharConstIdentifier CharConstIdentifier);
    public void visit(NumConstIdentifier NumConstIdentifier);
    public void visit(FirstConstIdentifier FirstConstIdentifier);
    public void visit(ConstIdentifiers ConstIdentifiers);
    public void visit(ConstantType ConstantType);
    public void visit(ConstDeclDefinition ConstDeclDefinition);
    public void visit(InterfaceDeclaration InterfaceDeclaration);
    public void visit(EnumDeclaration EnumDeclaration);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(Declarations Declarations);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
