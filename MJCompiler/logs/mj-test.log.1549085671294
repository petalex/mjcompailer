INFO  06:28:41,962 - Compiling source file: C:\Users\dp150101d\Documents\Fakultet\VII semestar\PP1\Projekat\pp1\workspace\MJCompiler\test\program.mj
INFO  06:28:41,967 - #2 program
INFO  06:28:41,968 - #19 P
INFO  06:28:41,968 - #8 const
INFO  06:28:41,968 - #19 int
INFO  06:28:41,968 - #19 size
INFO  06:28:41,968 - #36 =
INFO  06:28:41,968 - #22 10
INFO  06:28:41,968 - #39 ;
INFO  06:28:41,968 - #6 enum
INFO  06:28:41,968 - #19 Num
INFO  06:28:41,968 - #46 {
INFO  06:28:41,969 - #19 ZERO
INFO  06:28:41,969 - #40 ,
INFO  06:28:41,969 - #19 ONE
INFO  06:28:41,969 - #40 ,
INFO  06:28:41,969 - #19 TEN
INFO  06:28:41,969 - #36 =
INFO  06:28:41,969 - #22 10
INFO  06:28:41,969 - #47 }
INFO  06:28:41,969 - #5 interface
INFO  06:28:41,970 - #19 I
INFO  06:28:41,971 - #46 {
INFO  06:28:41,971 - #19 int
INFO  06:28:41,971 - #19 getp
INFO  06:28:41,971 - #42 (
INFO  06:28:41,971 - #19 int
INFO  06:28:41,971 - #19 i
INFO  06:28:41,971 - #43 )
INFO  06:28:41,971 - #39 ;
INFO  06:28:41,971 - #19 int
INFO  06:28:41,971 - #19 getn
INFO  06:28:41,971 - #42 (
INFO  06:28:41,971 - #19 int
INFO  06:28:41,971 - #19 i
INFO  06:28:41,971 - #43 )
INFO  06:28:41,972 - #39 ;
INFO  06:28:41,972 - #47 }
INFO  06:28:41,972 - #4 class
INFO  06:28:41,972 - #19 Table
INFO  06:28:41,972 - #19 implements
INFO  06:28:41,972 - #19 I
INFO  06:28:41,972 - #46 {
INFO  06:28:41,972 - #19 int
INFO  06:28:41,972 - #19 pos
INFO  06:28:41,972 - #44 [
INFO  06:28:41,972 - #45 ]
INFO  06:28:41,972 - #40 ,
INFO  06:28:41,972 - #19 neg
INFO  06:28:41,972 - #44 [
INFO  06:28:41,973 - #45 ]
INFO  06:28:41,973 - #39 ;
INFO  06:28:41,973 - #46 {
INFO  06:28:41,973 - #14 void
INFO  06:28:41,973 - #19 putp
INFO  06:28:41,973 - #42 (
INFO  06:28:41,973 - #19 int
INFO  06:28:41,973 - #19 a
INFO  06:28:41,973 - #40 ,
INFO  06:28:41,973 - #19 int
INFO  06:28:41,973 - #19 idx
INFO  06:28:41,973 - #43 )
INFO  06:28:41,973 - #46 {
INFO  06:28:41,974 - #19 this
INFO  06:28:41,974 - #41 .
INFO  06:28:41,974 - #19 pos
INFO  06:28:41,974 - #44 [
INFO  06:28:41,974 - #19 idx
INFO  06:28:41,974 - #45 ]
INFO  06:28:41,974 - #36 =
INFO  06:28:41,974 - #19 a
INFO  06:28:41,974 - #39 ;
INFO  06:28:41,974 - #47 }
INFO  06:28:41,974 - #14 void
INFO  06:28:41,975 - #19 putn
INFO  06:28:41,975 - #42 (
INFO  06:28:41,975 - #19 int
INFO  06:28:41,975 - #19 a
INFO  06:28:41,975 - #40 ,
INFO  06:28:41,975 - #19 int
INFO  06:28:41,975 - #19 idx
INFO  06:28:41,975 - #43 )
INFO  06:28:41,975 - #46 {
INFO  06:28:41,975 - #19 this
INFO  06:28:41,975 - #41 .
INFO  06:28:41,975 - #19 neg
INFO  06:28:41,975 - #44 [
INFO  06:28:41,975 - #19 idx
INFO  06:28:41,976 - #45 ]
INFO  06:28:41,976 - #36 =
INFO  06:28:41,976 - #19 a
INFO  06:28:41,976 - #39 ;
INFO  06:28:41,976 - #47 }
INFO  06:28:41,976 - #19 int
INFO  06:28:41,976 - #19 getp
INFO  06:28:41,976 - #42 (
INFO  06:28:41,976 - #19 int
INFO  06:28:41,976 - #19 idx
INFO  06:28:41,976 - #43 )
INFO  06:28:41,976 - #46 {
INFO  06:28:41,976 - #13 return
INFO  06:28:41,976 - #19 pos
INFO  06:28:41,977 - #44 [
INFO  06:28:41,977 - #19 idx
INFO  06:28:41,977 - #45 ]
INFO  06:28:41,977 - #39 ;
INFO  06:28:41,977 - #47 }
INFO  06:28:41,977 - #19 int
INFO  06:28:41,977 - #19 getn
INFO  06:28:41,977 - #42 (
INFO  06:28:41,977 - #19 int
INFO  06:28:41,977 - #19 idx
INFO  06:28:41,977 - #43 )
INFO  06:28:41,977 - #46 {
INFO  06:28:41,977 - #13 return
INFO  06:28:41,977 - #19 neg
INFO  06:28:41,978 - #44 [
INFO  06:28:41,978 - #19 idx
INFO  06:28:41,978 - #45 ]
INFO  06:28:41,978 - #39 ;
INFO  06:28:41,978 - #47 }
INFO  06:28:41,978 - #47 }
INFO  06:28:41,979 - #47 }
INFO  06:28:41,979 - #19 Table
INFO  06:28:41,979 - #19 val
INFO  06:28:41,979 - #39 ;
INFO  06:28:41,979 - #46 {
INFO  06:28:41,979 - #14 void
INFO  06:28:41,979 - #19 f
INFO  06:28:41,979 - #42 (
INFO  06:28:41,979 - #19 char
INFO  06:28:41,980 - #19 ch
INFO  06:28:41,980 - #40 ,
INFO  06:28:41,980 - #19 int
INFO  06:28:41,980 - #19 a
INFO  06:28:41,980 - #40 ,
INFO  06:28:41,980 - #19 int
INFO  06:28:41,980 - #19 arg
INFO  06:28:41,980 - #43 )
INFO  06:28:41,980 - #19 int
INFO  06:28:41,980 - #19 x
INFO  06:28:41,980 - #39 ;
INFO  06:28:41,980 - #46 {
INFO  06:28:41,981 - #19 x
INFO  06:28:41,981 - #36 =
INFO  06:28:41,981 - #19 arg
INFO  06:28:41,981 - #39 ;
INFO  06:28:41,981 - #47 }
INFO  06:28:41,981 - #14 void
INFO  06:28:41,981 - #19 main
INFO  06:28:41,981 - #42 (
INFO  06:28:41,981 - #43 )
INFO  06:28:41,981 - #19 int
INFO  06:28:41,981 - #19 x
INFO  06:28:41,981 - #40 ,
INFO  06:28:41,984 - #19 i
INFO  06:28:41,984 - #39 ;
INFO  06:28:41,984 - #19 char
INFO  06:28:41,984 - #19 c
INFO  06:28:41,984 - #39 ;
INFO  06:28:41,984 - #46 {
INFO  06:28:41,984 - #19 val
INFO  06:28:41,984 - #36 =
INFO  06:28:41,985 - #10 new
INFO  06:28:41,985 - #19 Table
INFO  06:28:41,985 - #39 ;
INFO  06:28:41,985 - #19 val
INFO  06:28:41,985 - #41 .
INFO  06:28:41,985 - #19 pos
INFO  06:28:41,985 - #36 =
INFO  06:28:41,985 - #10 new
INFO  06:28:41,985 - #19 int
INFO  06:28:41,985 - #44 [
INFO  06:28:41,985 - #19 size
INFO  06:28:41,985 - #45 ]
INFO  06:28:41,985 - #39 ;
INFO  06:28:41,985 - #19 val
INFO  06:28:41,985 - #41 .
INFO  06:28:41,986 - #19 neg
INFO  06:28:41,986 - #36 =
INFO  06:28:41,986 - #10 new
INFO  06:28:41,986 - #19 int
INFO  06:28:41,986 - #44 [
INFO  06:28:41,986 - #19 size
INFO  06:28:41,986 - #45 ]
INFO  06:28:41,986 - #39 ;
INFO  06:28:41,986 - #15 for
INFO  06:28:41,986 - #42 (
INFO  06:28:41,986 - #19 i
INFO  06:28:41,986 - #36 =
INFO  06:28:41,986 - #22 0
INFO  06:28:41,986 - #39 ;
INFO  06:28:41,986 - #19 i
INFO  06:28:41,987 - #32 <
INFO  06:28:41,987 - #19 size
INFO  06:28:41,987 - #39 ;
INFO  06:28:41,987 - #19 i
INFO  06:28:41,987 - #37 ++
INFO  06:28:41,987 - #43 )
INFO  06:28:41,987 - #46 {
INFO  06:28:41,987 - #19 val
INFO  06:28:41,987 - #41 .
INFO  06:28:41,987 - #19 putp
INFO  06:28:41,987 - #42 (
INFO  06:28:41,987 - #22 0
INFO  06:28:41,987 - #40 ,
INFO  06:28:41,987 - #19 i
INFO  06:28:41,987 - #43 )
INFO  06:28:41,987 - #39 ;
INFO  06:28:41,987 - #19 val
INFO  06:28:41,987 - #41 .
INFO  06:28:41,988 - #19 putn
INFO  06:28:41,988 - #42 (
INFO  06:28:41,988 - #22 0
INFO  06:28:41,988 - #40 ,
INFO  06:28:41,988 - #19 i
INFO  06:28:41,988 - #43 )
INFO  06:28:41,988 - #39 ;
INFO  06:28:41,988 - #47 }
INFO  06:28:41,988 - #19 f
INFO  06:28:41,988 - #42 (
INFO  06:28:41,988 - #19 c
INFO  06:28:41,988 - #40 ,
INFO  06:28:41,988 - #19 x
INFO  06:28:41,988 - #40 ,
INFO  06:28:41,988 - #19 i
INFO  06:28:41,988 - #43 )
INFO  06:28:41,988 - #39 ;
INFO  06:28:41,988 - #2 read
INFO  06:28:41,988 - #42 (
INFO  06:28:41,989 - #19 x
INFO  06:28:41,989 - #43 )
INFO  06:28:41,989 - #39 ;
INFO  06:28:41,989 - #15 for
INFO  06:28:41,989 - #42 (
INFO  06:28:41,989 - #39 ;
INFO  06:28:41,989 - #19 x
INFO  06:28:41,989 - #30 >
INFO  06:28:41,989 - #22 0
INFO  06:28:41,989 - #39 ;
INFO  06:28:41,989 - #43 )
INFO  06:28:41,989 - #46 {
INFO  06:28:41,989 - #9 if
INFO  06:28:41,989 - #42 (
INFO  06:28:41,990 - #19 Num
INFO  06:28:41,990 - #41 .
INFO  06:28:41,990 - #19 ZERO
INFO  06:28:41,990 - #33 <=
INFO  06:28:41,990 - #19 x
INFO  06:28:41,990 - #34 &&
INFO  06:28:41,990 - #19 x
INFO  06:28:41,990 - #32 <
INFO  06:28:41,990 - #19 size
INFO  06:28:41,990 - #43 )
INFO  06:28:41,990 - #46 {
INFO  06:28:41,990 - #19 val
INFO  06:28:41,990 - #41 .
INFO  06:28:41,990 - #19 putp
INFO  06:28:41,990 - #42 (
INFO  06:28:41,991 - #19 val
INFO  06:28:41,991 - #41 .
INFO  06:28:41,991 - #19 getp
INFO  06:28:41,991 - #42 (
INFO  06:28:41,991 - #19 x
INFO  06:28:41,991 - #43 )
INFO  06:28:41,991 - #23 +
INFO  06:28:41,991 - #19 Num
INFO  06:28:41,991 - #41 .
INFO  06:28:41,991 - #19 ONE
INFO  06:28:41,991 - #43 )
INFO  06:28:41,991 - #39 ;
INFO  06:28:41,991 - #47 }
INFO  06:28:41,991 - #7 else
INFO  06:28:41,992 - #9 if
INFO  06:28:41,992 - #42 (
INFO  06:28:41,992 - #24 -
INFO  06:28:41,992 - #19 size
INFO  06:28:41,992 - #32 <
INFO  06:28:41,992 - #19 x
INFO  06:28:41,992 - #34 &&
INFO  06:28:41,992 - #19 x
INFO  06:28:41,992 - #32 <
INFO  06:28:41,992 - #22 0
INFO  06:28:41,992 - #43 )
INFO  06:28:41,992 - #46 {
INFO  06:28:41,992 - #19 val
INFO  06:28:41,992 - #41 .
INFO  06:28:41,992 - #19 putn
INFO  06:28:41,992 - #42 (
INFO  06:28:41,992 - #19 val
INFO  06:28:41,992 - #41 .
INFO  06:28:41,992 - #19 getn
INFO  06:28:41,992 - #42 (
INFO  06:28:41,992 - #24 -
INFO  06:28:41,992 - #19 x
INFO  06:28:41,992 - #43 )
INFO  06:28:41,993 - #23 +
INFO  06:28:41,993 - #22 1
INFO  06:28:41,993 - #43 )
INFO  06:28:41,993 - #39 ;
INFO  06:28:41,993 - #47 }
INFO  06:28:41,993 - #2 read
INFO  06:28:41,993 - #42 (
INFO  06:28:41,993 - #19 x
INFO  06:28:41,993 - #43 )
INFO  06:28:41,993 - #39 ;
INFO  06:28:41,993 - #47 }
INFO  06:28:41,993 - #47 }
INFO  06:28:41,993 - #47 }
